{"ast":null,"code":"import _toConsumableArray from \"/Users/jonasdavidow/Desktop/memory-game/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jonasdavidow/Desktop/memory-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jonasdavidow/Desktop/memory-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jonasdavidow/Desktop/memory-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jonasdavidow/Desktop/memory-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jonasdavidow/Desktop/memory-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jonasdavidow/Desktop/memory-game/src/App.js\";\nimport React, { Component } from 'react';\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Board from './components/Board';\nimport Shows from './shows.json';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      message: \"Click an image to start\",\n      score: 0,\n      // images: [{ color: \"red\", index: 1 }, { color: \"blue\", index: 2 }, { color: \"green\", index: 3 },\n      // { color: \"yellow\", index: 4 }, { color: \"black\", index: 5 }],\n      images: _toConsumableArray(Shows),\n      clicked: []\n    };\n\n    _this.handleImageClickById = function (imageID) {\n      var clicked = _this.state.clicked.slice(0); //is this imageID in clicked\n\n\n      if (clicked.findIndex(function (item) {\n        return imageID === item;\n      }) === -1) {\n        clicked.push(imageID);\n\n        _this.setState({\n          \"clicked\": clicked,\n          \"score\": _this.state.score + 1\n        });\n      } else {\n        // you lose, start over\n        _this.setState({\n          \"message\": \"You lose, start over\",\n          \"score\": 0,\n          \"clicked\": []\n        });\n      } // rearrange images\n\n\n      var images = _this.state.images.slice(0);\n\n      images.sort(function () {\n        return Math.random() - 0.5;\n      });\n\n      _this.setState({\n        images: images\n      });\n\n      console.log(\"handling click for \", imageID);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Header, {\n        message: this.state.message,\n        score: this.state.score,\n        total: this.state.images.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Board, {\n        images: this.state.images,\n        clickHandler: this.handleImageClickById,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/jonasdavidow/Desktop/memory-game/src/App.js"],"names":["React","Component","Header","Board","Shows","App","state","message","score","images","clicked","handleImageClickById","imageID","slice","findIndex","item","push","setState","sort","Math","random","console","log","length"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;IAGMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,yBADH;AAENC,MAAAA,KAAK,EAAE,CAFD;AAGN;AACA;AACAC,MAAAA,MAAM,qBAAML,KAAN,CALA;AAMNM,MAAAA,OAAO,EAAE;AANH,K;;UASRC,oB,GAAuB,UAACC,OAAD,EAAa;AAClC,UAAIF,OAAO,GAAG,MAAKJ,KAAL,CAAWI,OAAX,CAAmBG,KAAnB,CAAyB,CAAzB,CAAd,CADkC,CAGlC;;;AACA,UAAIH,OAAO,CAACI,SAAR,CAAkB,UAAAC,IAAI;AAAA,eAAIH,OAAO,KAAKG,IAAhB;AAAA,OAAtB,MAAgD,CAAC,CAArD,EAAwD;AACtDL,QAAAA,OAAO,CAACM,IAAR,CAAaJ,OAAb;;AACA,cAAKK,QAAL,CAAc;AACZ,qBAAWP,OADC;AAEZ,mBAAS,MAAKJ,KAAL,CAAWE,KAAX,GAAmB;AAFhB,SAAd;AAKD,OAPD,MAOO;AACL;AACA,cAAKS,QAAL,CAAc;AACZ,qBAAW,sBADC;AAEZ,mBAAS,CAFG;AAGZ,qBAAW;AAHC,SAAd;AAKD,OAlBiC,CAmBlC;;;AACA,UAAIR,MAAM,GAAG,MAAKH,KAAL,CAAWG,MAAX,CAAkBI,KAAlB,CAAwB,CAAxB,CAAb;;AACAJ,MAAAA,MAAM,CAACS,IAAP,CAAY;AAAA,eAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,OAAZ;;AACA,YAAKH,QAAL,CAAc;AAAER,QAAAA,MAAM,EAANA;AAAF,OAAd;;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCV,OAAnC;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWC,OADtB;AAEE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAFpB;AAGE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,MAAX,CAAkBc,MAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWG,MADrB;AAEE,QAAA,YAAY,EAAE,KAAKE,oBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAYD;;;;EAjDeV,S;;AAoDlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Board from './components/Board';\nimport Shows from './shows.json';\n\n\nclass App extends Component {\n  state = {\n    message: \"Click an image to start\",\n    score: 0,\n    // images: [{ color: \"red\", index: 1 }, { color: \"blue\", index: 2 }, { color: \"green\", index: 3 },\n    // { color: \"yellow\", index: 4 }, { color: \"black\", index: 5 }],\n    images: [...Shows],\n    clicked: []\n  };\n\n  handleImageClickById = (imageID) => {\n    let clicked = this.state.clicked.slice(0);\n\n    //is this imageID in clicked\n    if (clicked.findIndex(item => imageID === item) === -1) {\n      clicked.push(imageID);\n      this.setState({\n        \"clicked\": clicked,\n        \"score\": this.state.score + 1\n      });\n\n    } else {\n      // you lose, start over\n      this.setState({\n        \"message\": \"You lose, start over\",\n        \"score\": 0,\n        \"clicked\": []\n      });\n    }\n    // rearrange images\n    let images = this.state.images.slice(0);\n    images.sort(() => Math.random() - 0.5);\n    this.setState({ images });\n    console.log(\"handling click for \", imageID);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          message={this.state.message}\n          score={this.state.score}\n          total={this.state.images.length} />\n        <Board\n          images={this.state.images}\n          clickHandler={this.handleImageClickById}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}